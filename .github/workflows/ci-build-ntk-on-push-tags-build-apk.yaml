name: CI Build NTK on Push TAG
on:
  workflow_call:

jobs:
  build-apk:
    name: Build APK
    runs-on: self-hosted
    environment: ${{ inputs.environment }}
    # permissions:
    #   contents: read
    #   packages: write
    outputs:
      REP_NAME: ${{ steps.prep.outputs.REP_NAME }}
      SHORT_SHA: ${{ steps.prep.outputs.SHORT_SHA }} 
      SHORT_REF_NAME: ${{ steps.prep.outputs.SHORT_REF_NAME }}
      RELEASE: ${{ steps.prep.outputs.RELEASE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare Vars
        id: prep
        run: |
          echo "REP_NAME=`echo ${GITHUB_REPOSITORY} | cut -d "/" -f2 `" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
          echo "RELEASE=`echo $(date +'%Y_R%q')`" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
          if [[ ${{ github.ref_type }} == 'branch' ]]; then
            echo "SHORT_REF_NAME=`echo ${{ github.ref_name }}`" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
          else
            echo "SHORT_REF_NAME=`echo ${{ github.event.base_ref }} | cut -d "/" -f3`" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
          fi


      - name: Delete Tag
        uses: dev-drprasad/delete-tag-and-release@v0.2.1
        with:
          #delete_release: false # default: false
          tag_name: ${{ github.ref_name }} # tag name to delete
          #repo: ${{ github.repository_owner }}/${{ env.REP_NAME }} # target repo (optional). defaults to repo running this action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}         

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      

      - name: ðŸ’¿ Setup NODEJS
        uses: actions/setup-node@v3
        id: node_inst
        with:
          node-version: '18'

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'
    
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.1

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3


      - name: Generating Release Key
        run: |
          keytool -genkey -dname "cn=NovaitDevTeam, ou=IT, o=Novait, l=Pune, st=Kyib, c=UA" -v -keystore ./release-key.keystore -alias ntk-ui-lite-release-key -keyalg RSA -keysize 2048 -validity 20000 -storepass android -keypass android
          ls -la ./

      - name: Displaying debug.keystore file
        run: |
          keytool -list -v -keystore ./release-key.keystore -alias ntk-ui-lite-release-key -storepass android -keypass android

        

      - name: Setup Components & Build
        env:
          ANDROID_HOME: '/home/runner/.android/sdk'
          ANDROID_SDK_ROOT: '/home/runner/.android/sdk'


        run: |
          curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
          echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
          sudo apt-get update && sudo apt-get install yarn -y
          export PATH="$(yarn global bin):$PATH"
          export PATH=$ANDROID_SDK_ROOT/platform-tools/:$PATH
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/:$PATH
          export PATH=$ANDROID_SDK_ROOT/emulator/:$PATH
          export PATH=$ANDROID_SDK_ROOT/build-tools/:$PATH
          yarn global add quasar
          yarn global add @quasar/cli
          yarn install
          quasar --version
          echo 'com.novatalks.ui.lite' | quasar build -m capacitor -T android
          chmod +x ./src-capacitor/android/gradlew
          ./src-capacitor/android/gradlew --project-dir=./src-capacitor/android
          $(find $ANDROID_SDK_ROOT -name apksigner) sign --ks my-release-key.keystore --ks-key-alias ntk-ui-lite-release-key --ks-pass pass:android --key-pass pass:android ./src-capacitor/android/app/build/outputs/apk/release/ 
          sleep 10000
#          zip -r --junk-paths ./android-release-${{ env.SHORT_REF_NAME }}-${{ env.SHORT_SHA }}.zip ./src-capacitor/android/app/build/outputs/apk/debug/




  







      # - name: Setup Components
      #   run: |
      #     curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
      #     echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
      #     sudo apt-get update && sudo apt-get install yarn -y
      #     yarn --version
      #     export PATH="$(yarn global bin):$PATH"
      #     yarn install
      #     mkdir ./src-capacitor
      #     touch ./src-capacitor/capacitor.config.json
      #     echo "{\"appId\": \"ntk.ui.lite\", \"appName\": \"novatalks-ui-lite\", \"webDir\": \"www\" }" > ./src-capacitor/capacitor.config.json
      #     cat ./src-capacitor/capacitor.config.json
      #     yarn global add quasar
      #     yarn global add @quasar/cli
      #     quasar --version
      #     quasar build -m capacitor -T android --skip-pkg
      #     chmod +x ./src-capacitor/android/gradlew

      # - name: Gradle Android
      #   uses: vgaidarji/android-github-actions-build@v1.0.1
      #   with:
      #     args: ./src-capacitor/android/gradlew --project-dir=./src-capacitor/android assembleDebug
      
      # - run: zip -r ../android-release-${{ env.SHORT_REF_NAME }}-${{ env.SHORT_SHA }}.zip ./src-capacitor/android/app/build/outputs/apk/debug/


 #     - run: zip -r --junk-paths ./android-release-${{ env.SHORT_REF_NAME }}-${{ env.SHORT_SHA }}.zip ./src-cordova/platforms/android/app/build/outputs/apk/release/
  
    
      # - name: Create a Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: NTK.UI-LITE_${{ env.RELEASE }}_${{ env.SHORT_REF_NAME }}_${{ env.SHORT_SHA }}
      #     release_name: NTK.UI-LITE_${{ env.RELEASE }}_${{ env.SHORT_REF_NAME }}_${{ env.SHORT_SHA }}
      #     body: Automated Deployment
      #     draft: false
      #     prerelease: false

      # - name: Upload a Release Asset
      #   id: upload_release_asset
      #   uses: actions/upload-release-asset@v1.0.2
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./android-release-${{ env.SHORT_REF_NAME }}-${{ env.SHORT_SHA }}.zip
      #     asset_name: android-release-${{ env.SHORT_REF_NAME }}-${{ env.SHORT_SHA }}.zip
      #     asset_content_type: appliction/zip

      
        
