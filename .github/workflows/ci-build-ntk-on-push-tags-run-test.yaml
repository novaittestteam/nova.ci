name: CI Build NTK on Push TAG
on:
  workflow_call:

env:
  #DATABASE CONFIG
  DATABASE_DIALECT: postgres
  DATABASE_HOST: 127.0.0.1
  DATABASE_PORT: 5432
  DATABASE_USERNAME: postgres
  DATABASE_PASSWORD: password
  DATABASE_NAME: db_name

jobs:
  e2e-test:
    name: Test Runner
    runs-on: self-hosted
    environment: ${{ inputs.environment }}
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: ${{ env.DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ env.DATABASE_NAME }}
          POSTGRES_USER: ${{ env.DATABASE_USERNAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    outputs:
      END_STEP_JOB_ID: ${{ steps.end_step.outputs.END_STEP_JOB_ID }}    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Delete Tag
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  

      - name: üíø Setup NODEJS
        uses: actions/setup-node@v3
        id: node_inst
        with:
          node-version: 18.12


      - name: ‚ñ∂Ô∏è Get Env From Example
        id: prep_1
        run: |
          sed '/^#/d' .env.example > .env
          cat .env >> $GITHUB_ENV


      # - name: Step 2
      #   id: prep_2
      #   run: |
      #     echo $GITHUB_ENV

      # - run: |
      #     whoami
      #     pwd
      #     cat /etc/os-release
      #     sudo apt-get update
      #     sudo apt-get install -y postgresql-client python3 make yarn
      #     psql --version
      #     docker ps -a
      #     npm install pg

      # - name: Test connection
      #   run: |
      #     psql --version
      #     pg_isready -h ${{ env.DATABASE_HOST }} -p ${{ env.DATABASE_PORT }}


      # - name: Connect to PostgreSQL
      #   run: node test_db.js
      #   env:
      #     POSTGRES_HOST: ${{ env.DATABASE_HOST }} 
      #     POSTGRES_PORT: ${{ env.DATABASE_PORT }}

      - name: ‚ñ∂Ô∏è Delete Lock Files
        run: |
          rm package-lock.json
          rm yarn.lock

      - name: ‚è¨ Install Dependencies
        env:
          NODE_ENV: development
          #NODE_OPTIONS: "--max-old-space-size=8192"
        run: |
          npm pkg delete scripts.prepare
          npm install --loglevel info
          
      - name: ‚ñ∂Ô∏è Migrate DB
        run: npm run db:migrate #--loglevel info


      - name: üö∂ Run One Test
        if: ${{ contains(github.ref_name, 'int-test') && endsWith( github.ref_name, '.ts' ) }}
        run: |
          echo ${{ github.ref_name }} | cut -d "-" -f3 | xargs npm run test
        #run: npm run test account.controller.integration.spec.ts #--loglevel info
        #run: npm run test inbox.controller.integration.spec.ts
        env:
          NODE_ENV: development
          NODE_OPTIONS: "--max-old-space-size=8192"
          LOG_LEVEL: "error"

      - name: üèÉ Run Test Modules
        if: ${{ endsWith( github.ref_name, 'int-test' ) }}
        run: npm run test #--loglevel info
        #run: npm run test account.controller.integration.spec.ts #--loglevel info
        #run: npm run test inbox.controller.integration.spec.ts
        env:
          NODE_ENV: development
          NODE_OPTIONS: "--max-old-space-size=8192"
          LOG_LEVEL: "error"

      - name: End Step On Failure
        if: failure()
        id: end_step
        run: echo "END_STEP_JOB_ID=`echo ${{ github.run_id }}`" | tee -a $GITHUB_OUTPUT

  notify-telegram:
    name: Notifier
    runs-on: self-hosted
    if: always()
    needs: e2e-test
    steps:

      - name: Set Telegram Message
        uses: haya14busa/action-cond@v1
        id: telegram_message
        with:
          cond: ${{ contains(join(needs.*.result, ','), 'success') }}
          if_true: |
            üë∑ ${{ github.actor }} start test
            
            Test assembly has been completed ‚úÖ
            
            Repository: ${{ github.repository }}  
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
          if_false: |
            üë∑ ${{ github.actor }} start test
            
            ‚ùåTests Failed
              
            üîó See Details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ needs.e2e-test.outputs.END_STEP_JOB_ID}}
            Repository: ${{ github.repository }}  
    
      - name: Send to Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TG_NOTIFICATION_BOT_ID }}
          token: ${{ secrets.TG_NOTIFICATION_BOT_TOKEN }}
          message: ${{ steps.telegram_message.outputs.value }}
