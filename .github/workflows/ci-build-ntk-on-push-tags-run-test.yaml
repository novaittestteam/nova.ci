name: CI Build NTK on Push TAG
on:
  workflow_call:

env:
  #DATABASE CONFIG
  DATABASE_DIALECT: postgres
  DATABASE_HOST: 127.0.0.1
  DATABASE_PORT: 5432
  DATABASE_USERNAME: postgres
  DATABASE_PASSWORD: password
  DATABASE_NAME: db_name

jobs:
  e2e-test:
    name: Test Runner
    runs-on: self-hosted
    environment: ${{ inputs.environment }}
    #container: node:16.17-alpine
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: $DATABASE_PASSWORD
        # Set health checks to wait until postgres has started
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - name: Step 1
      #   id: prep_1
      #   run: |
      #     sed '/^#/d' .env.example > .env
      #     cat .env >> $GITHUB_ENV

      # - name: Step 2
      #   id: prep_2
      #   run: |
      #     echo $GITHUB_ENV

      - run: |
          whoami
          pwd
          cat /etc/os-release
          sudo apt-get update
          sudo apt-get install -y postgresql-client nodejs npm
          psql --version
          docker ps -a
          npm install pg

      - name: Test connection
        run: |
          psql --version
          pg_isready -h ${{ env.DATABASE_HOST }} -p ${{ env.DATABASE_PORT }}

      - name: Connect to PostgreSQL
        run: node test_db.js
        env:
          POSTGRES_HOST: ${{ env.DATABASE_HOST }} 
          POSTGRES_PORT: ${{ env.DATABASE_PORT }}


      # - run: apt update && apt install -y postgresql

      # - run: npm i -g npm@7.20.0

