name: CI E2E Tests NTK on Push TAG
on:
  workflow_call:

defaults:
  run:
    working-directory: /home/runner/work/

jobs:
  build-tests:
    name: Run Playwright Tests
    runs-on: self-hosted
    environment: ${{ inputs.environment }}
    outputs:
      REP_NAME: ${{ steps.prep.outputs.REP_NAME }}
      SHORT_SHA: ${{ steps.prep.outputs.SHORT_SHA }} 
      SHORT_REF_NAME: ${{ steps.prep.outputs.SHORT_REF_NAME }}
      RELEASE: ${{ steps.prep.outputs.RELEASE }}
      REPORT: ${{ steps.report.outputs.artifact-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
    
      - name: Prepare Vars
        id: prep
        run: |
          echo "REP_NAME=`echo ${GITHUB_REPOSITORY} | cut -d "/" -f2 `" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
          echo "RELEASE=`echo $(date +'%Y_R%q')`" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
          if [[ ${{ github.ref_type }} == 'branch' ]]; then
            echo "SHORT_REF_NAME=`echo ${{ github.ref_name }}`" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
          else
            echo "SHORT_REF_NAME=`echo ${{ github.event.base_ref }} | cut -d "/" -f3`" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
          fi


      - name: Delete Tag
        uses: dev-drprasad/delete-tag-and-release@v0.2.1
        with:
          #delete_release: false # default: false
          tag_name: ${{ github.ref_name }} # tag name to delete
          #repo: ${{ github.repository_owner }}/${{ env.REP_NAME }} # target repo (optional). defaults to repo running this action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: üíø Setup NODEJS
      #   uses: actions/setup-node@v4
      #   id: node_inst
      #   with:
      #     node-version: 20

      # - name: ‚ñ∂Ô∏è Install Node.js dependencies
      #   run: ls -la ./ && npm ci
      #   working-directory: ./

      # - name: Install Playwright Browsers
      #   run: npx playwright install --with-deps
      #   working-directory: ./
      #   env:
      #     PLAYWRIGHT_BROWSERS_PATH: ./browsers

      # - name: Manual Run
      #   run: sleep 100000 
      #   working-directory: ./
      #   env:
      #     ENV_URL: ${{ secrets.LAB_ENV_URL }}
      #     # BOTFLOW_URL: ${{ secrets.LAB_BOTFLOW_URL }}

      #     BOTFLOW_ADMIN_LOGIN: ${{ secrets.LAB_BOTFLOW_ADMIN_LOGIN }}
      #     BOTFLOW_ADMIN_PASSWORD: ${{ secrets.LAB_BOTFLOW_ADMIN_PASSWORD }}
      #     UI_ADMIN_LOGIN: ${{ secrets.LAB_UI_ADMIN_LOGIN }}
      #     UI_ADMIN_PASSWORD: ${{ secrets.LAB_UI_ADMIN_PASSWORD }}
      #     API_TOKEN: ${{ secrets.LAB_API_TOKEN }}
      #     PLAYWRIGHT_BROWSERS_PATH: ./browsers

      # - name: Run Once
      #   # run: cd ./novatalks.tests/novatalks.tests/ && npx playwright test QANT-16-TimerStatus.spec.ts
      #   run: npx playwright test QANT-16-TimerStatus.spec.ts
      #   # run: env; npx playwright test #--grep @bug
      #   working-directory: ./
      #   env:
      #     ENV_URL: ${{ secrets.LAB_ENV_URL }}
      #     # ENV_URL: "https://novatalks-e2e-tests.k3s.dev.novait.com.ua"
      #     # BOTFLOW_URL: ${{ secrets.LAB_BOTFLOW_URL }}
      #     # BOTFLOW_URL: "https://novatalks-e2e-tests.k3s.dev.novait.com.ua"
      #     BOTFLOW_ADMIN_LOGIN: ${{ secrets.LAB_BOTFLOW_ADMIN_LOGIN }}
      #     BOTFLOW_ADMIN_PASSWORD: ${{ secrets.LAB_BOTFLOW_ADMIN_PASSWORD }}
      #     UI_ADMIN_LOGIN: ${{ secrets.LAB_UI_ADMIN_LOGIN }}
      #     UI_ADMIN_PASSWORD: ${{ secrets.LAB_UI_ADMIN_PASSWORD }}
      #     API_TOKEN: ${{ secrets.LAB_API_TOKEN }}
      #     PLAYWRIGHT_BROWSERS_PATH: ./browsers

      # - name: Save Artifact
      #   uses: actions/upload-artifact@v4
      #   if: ${{ !cancelled() }}
      #   id: report
      #   with:
      #     name: playwright-report
      #     path: playwright-report/
      #     retention-days: 30
           
  # publish-report:
  #   name: Publish HTML Report
  #   # using always() is not ideal here, because it would also run if the workflow was cancelled
  #   if: always()
  #   needs: [build-tests]
  #   runs-on: self-hosted
  #   continue-on-error: true
  #   env:
  #     # Unique URL path for each workflow run attempt
  #     HTML_REPORT_URL_PATH: reports/${{ github.ref_name }}/${{ github.run_id }}/${{ github.run_attempt }}
  #   steps:
  #     - name: Checkout GitHub Pages Branch
  #       uses: actions/checkout@v4
  #       with:
  #         ref: gh-pages

  #     - name: Set Git User
  #       # see: https://github.com/actions/checkout/issues/13#issuecomment-724415212
  #       run: |
  #         git config --global user.name "github-actions[bot]"
  #         git config --global user.email "<>"

  #     - name: Download zipped HTML report
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: playwright-report
  #         path: ${{ env.HTML_REPORT_URL_PATH }}

  #     - name: Push HTML Report
  #       working-directory: ./
  #       timeout-minutes: 3
  #       # commit report, then try push-rebase-loop until it's able to merge the HTML report to the gh-pages branch
  #       # this is necessary when this job is running at least twice at the same time (e.g. through two pushes at the same time)
  #       run: |
  #         git add .
  #         git commit -m "workflow: add HTML report for run-id ${{ github.run_id }} (attempt:  ${{ github.run_attempt }})"

  #         while true; do
  #           git pull --rebase
  #           if [ $? -ne 0 ]; then
  #             echo "Failed to rebase. Please review manually."
  #             exit 1
  #           fi

  #           git push
  #           if [ $? -eq 0 ]; then
  #             echo "Successfully pushed HTML report to repo."
  #             exit 0
  #           fi
  #         done
  #     - name: Output Report URL as Worfklow Annotation
  #       run: |
  #         FULL_HTML_REPORT_URL=https://novaittestteam.github.io/novatalks.tests/$HTML_REPORT_URL_PATH

  #         echo "::notice title=üìã Published Playwright Test Report::$FULL_HTML_REPORT_URL"

  publish-report-r2:
    name: Publish HTML Report
    # using always() is not ideal here, because it would also run if the workflow was cancelled
    if: always()
    needs: [build-tests]
    runs-on: self-hosted
    continue-on-error: true
    env:
      # Unique URL path for each workflow run attempt
      HTML_REPORT_URL_PATH: reports/${{ github.ref_name }}/${{ github.run_id }}/${{ github.run_attempt }}
      # AWS_S3_ACCESS_KEY_ID: ${{ secrets.LAB_AWS_S3_ACCESS_KEY_ID }}
      # AWS_S3_SECRET_ACCESS_KEY: ${{ secrets.LAB_AWS_S3_SECRET_ACCESS_KEY }}
      # AWS_S3_REGION: "eeur"
    steps:
      - name: Download zipped HTML report
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: ${{ env.HTML_REPORT_URL_PATH }}

      - name: install AWS cli
        working-directory: ./
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -qq awscliv2.zip
          sudo ./aws/install
          aws --version
          aws configure list
        env:
          AWS_S3_ACCESS_KEY_ID: ${{ secrets.LAB_AWS_S3_ACCESS_KEY_ID }}
          AWS_S3_SECRET_ACCESS_KEY: ${{ secrets.LAB_AWS_S3_SECRET_ACCESS_KEY }}
          AWS_S3_REGION: "eeur"

      # - name: Upload to R2
      #   working-directory: ./
      #   run: |
      #     aws --endpoint-url  https://ae13ef8b693e69bc0f56090c9854eeea.r2.cloudflarestorage.com/ s3 cp ./${{ env.HTML_REPORT_URL_PATH }} s3://playwright/${{ env.HTML_REPORT_URL_PATH }} --recursive